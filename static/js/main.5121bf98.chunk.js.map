{"version":3,"sources":["recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","src","alt","map","ingredient","text","Math","round","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iQAmBeA,EAhBA,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,YACrC,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,6BAAKN,IACL,qBAAKO,IAAKL,EAAOM,IAAI,KACrB,6BACKL,EAAYM,KAAI,SAAAC,GAAU,OACvB,6BAAKA,EAAWC,YAGtB,2CAAcC,KAAKC,MAAMZ,UC+CxBa,G,MArDH,WAEZ,IAFkB,EAMYC,mBAAS,IANrB,mBAMXC,EANW,KAMFC,EANE,OAOUF,mBAAS,IAPnB,mBAOXG,EAPW,KAOHC,EAPG,OAQQJ,mBAAS,OARjB,mBAQXK,EARW,KAQJC,EARI,KAUhBC,qBAAU,WAERC,MACC,CAACH,IAEJ,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OAAoCL,EAApC,mBAdjB,WAciB,oBAbhB,uCAYK,cACXM,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBX,EAAWW,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MAJA,2CAAH,qDAiBhB,OACE,sBAAKzB,UAAU,MAAf,UACE,uBAAM4B,SARQ,SAAAC,GAChBA,EAAEC,iBACFb,EAASH,GACTC,EAAU,KAKmBf,UAAU,cAArC,UACA,uBAAOA,UAAU,aAAa+B,KAAK,OAAOC,MAAOlB,EAAQmB,SAbxC,SAAAJ,GACnBd,EAAUc,EAAEK,OAAOF,QAYgEG,YAAY,yCACjG,wBAAQnC,UAAU,aAAa+B,KAAK,SAApC,wBAEI,qBAAK/B,UAAU,UAAf,SACCY,EAAQP,KAAI,SAAAH,GAAM,OACjB,cAAC,EAAD,CAECN,MAAOM,EAAOA,OAAOkC,MACrBvC,SAAUK,EAAOA,OAAOL,SACxBC,MAAOI,EAAOA,OAAOJ,MACrBC,YAAaG,EAAOA,OAAOH,aAJvBG,EAAOA,OAAOkC,iBCpCZC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,0B","file":"static/js/main.5121bf98.chunk.js","sourcesContent":["import React from \"react\";\r\nimport style from \"./recipe.module.css\";\r\n\r\nconst Recipe = ({title, calories, image, ingredients}) => {\r\n    return(\r\n        <div className={style.recipe}>\r\n            <h1>{title}</h1>\r\n            <img src={image} alt=\"\"/>\r\n            <ul>\r\n                {ingredients.map(ingredient =>(\r\n                    <li>{ingredient.text}</li>\r\n                ))}\r\n            </ul>\r\n              <p>calories: {Math.round(calories)}</p>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Recipe;","\nimport React, {useEffect, useState} from \"react\";\nimport Recipe from './recipe';\nimport './App.css';\n\n\n\nconst App = () => {\n\nconst APP_ID = '653e3418';\nconst APP_KEY = '6092e68edb6d9a42d24301e71009ba84\t';\n\n\nconst [recipes, setRecipes] = useState([]);\nconst [search, setSearch] = useState(\"\");\nconst [query, setQuery] = useState(\"pie\")\n\n  useEffect(() => {\n    // eslint-disable-next-line\n    getRecipes();\n  }, [query]);\n\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    const data = await response.json();\n    setRecipes(data.hits);\n    console.log(data.hits)\n  };\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  }\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search)\n    setSearch('');\n  }\n\n  return(\n    <div className=\"App\">\n      <form onSubmit={getSearch} className='search-form'>\n      <input className='search-bar' type=\"text\" value={search} onChange={updateSearch} placeholder=\"Search for an ingredient or a recipe\"/>\n  <button className='search-btn' type='submit'> Search</button>\n      </form>\n      <div className=\"recipes\">\n      {recipes.map(recipe =>(\n        <Recipe \n        key={recipe.recipe.label}\n         title={recipe.recipe.label}\n         calories={recipe.recipe.calories}\n         image={recipe.recipe.image}\n         ingredients={recipe.recipe.ingredients}\n        />\n      ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__3pvoC\"};"],"sourceRoot":""}